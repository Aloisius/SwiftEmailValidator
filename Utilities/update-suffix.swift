//
//  update-suffix.swift
//  SwiftEmailValidator
//
//  Created by Dave Poirier on 2022-01-22
//  Copyrights (C) 2022, Dave Poirier.  Distributed under MIT license

import Foundation

let publicSuffixUrl = URL(string: "https://publicsuffix.org/list/public_suffix_list.dat")!
guard let publicSuffixData = try? Data(contentsOf: publicSuffixUrl),
      let publixSuffixAsString = String(data: publicSuffixData, encoding: .utf8)
else {
    print("Failed to download and decode public_suffix_list.dat")
    exit(-1)
}

let publicSuffixRulesRegistry: [[String]] = publixSuffixAsString
    .components(separatedBy: .newlines)
    .filter({ !$0.hasPrefix("//") && !$0.isEmpty })
    .map({ $0.components(separatedBy: ".") })

let publicSuffixSwiftString: String = """
  //
  //  PublicSuffixRulesRegistry.swift
  //  SwiftEmailValidator
  //
  //  Generated by Utilities/update-suffix.swift
  //
  //  Usage:
  //  # cd $(SRCROOT)/Utilities
  //  # swift update-suffix.swift
  
  public final class PublicSuffixRulesRegistry {
    public static let rules: [[String]] = \(publicSuffixRulesRegistry)
  }
  """
    .replacingOccurrences(of: "[[\"", with: "[\n    [\"")
    .replacingOccurrences(of: "], [", with: "],\n    [")

guard let publicSuffixSwiftData: Data = publicSuffixSwiftString.data(using: .utf8) else {
    fatalError("Unable to generate Swift representation, aborted.")
}

let generatedSwiftFileUrl = URL(fileURLWithPath: FileManager.default.currentDirectoryPath)
    .deletingLastPathComponent() // get out of the Utilities folder
    .appendingPathComponent("Sources")
    .appendingPathComponent("SwiftEmailValidator")
    .appendingPathComponent("PublicSuffixRulesRegistry.swift")

do {
    try publicSuffixSwiftData.write(to: generatedSwiftFileUrl)
    print("Generated file stored at \(generatedSwiftFileUrl)")
} catch {
    print("Failed to generate output file at \(generatedSwiftFileUrl): \(error)")
}
